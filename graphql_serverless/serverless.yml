service: wetodos
app: wetodos
org: anxing

provider:
  runtime: nodejs10.x
  name: aws
  environment:
    NODE_ENV: ${env:NODE_ENV,  'dev'}
    DYNAMODB_TABLE: ${self:service}-${opt:stage, self:provider.stage}
    JWT_PRIVATE_KEY: ${env:JWT_PRIVATE_KEY}
    JWT_PUBLIC_KEY: ${env:JWT_PUBLIC_KEY}
    WX_APPID: ${env:WX_APPID, 'wx191e49fa78da996f'}
    WX_SECRET: ${env:WX_SECRET, '15c91641d2483d95de4a5eb92bba365a'}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"

functions:
  hello:
    handler: src/handler.hello # restful api handler
    events:
      - http:
          path: hello
          method: get
          cors: true
  graphql-handler:
    handler: src/graphql-handler.graphqlHandler # Apollo GraphQL handler
    events:
      - http:
          path: graphql
          method: post
          cors: true
      - http:
          path: graphql
          method: get
          cors: true
  public-graphql-handler:
    handler: src/graphql/public/handler.graphqlHandler # 公共模块入口，eg: register\login
    events:
      - http:
          path: public
          method: post
          cors: true
      - http:
          path: public
          method: get
          cors: true
  auth-graphql-handler:
    handler: src/graphql/auth/handler.graphqlHandler # 授权模块入口，eg: CURD Todos
    events:
      - http:
          path: auth
          method: post
          cors: true
      - http:
          path: auth
          method: get
          cors: true

plugins:
  - serverless-dynamodb-local
  - serverless-offline

custom:
  dynamodb:
    stages:
      - dev
    start:
      port: 8000
#      inMemory: true
      migrate: true
      dbPath: ${env:PWD}/tmp
    migration:
      dir: offline/migrations

resources:
  Resources:
    UserDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: wxOpenId
            AttributeType: S
          - AttributeName: name
            AttributeType: S
          - AttributeName: email
            AttributeType: S
          - AttributeName: phone
            AttributeType: S


        KeySchema: # 这个是table 主键定义， or 是一个table index 定义
          - AttributeName: id
            KeyType: HASH

        GlobalSecondaryIndexes:
          - IndexName: 'index_name'
            KeySchema:
              - AttributeName: 'name'
                KeyType: HASH
            Projection:
              ProjectionType: 'ALL'
          - IndexName: 'index_wxOpenId'
            KeySchema:
              - AttributeName: 'wxOpenId'
                KeyType: HASH
            Projection:
              ProjectionType: 'ALL'
          - IndexName: 'index_email'
            KeySchema:
              - AttributeName: 'email'
                KeyType: HASH
            Projection:
              ProjectionType: 'ALL'
          - IndexName: 'index_phone'
            KeySchema:
              - AttributeName: 'phone'
                KeyType: HASH
            Projection:
              ProjectionType: 'ALL'
        BillingMode: PAY_PER_REQUEST
        TableName: User_${env:NODE_ENV, 'dev'}

    ListDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        BillingMode: PAY_PER_REQUEST
        TableName: List_${env:NODE_ENV, 'dev'}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: name
            AttributeType: S
          - AttributeName: uid
            AttributeType: S

        KeySchema: # 这个是table 主键定义， or 是一个table index 定义
          - AttributeName: id
            KeyType: HASH

        GlobalSecondaryIndexes:
          - IndexName: 'index_name'
            KeySchema:
              - AttributeName: 'name'
                KeyType: HASH
            Projection:
              ProjectionType: 'ALL'
          - IndexName: 'index_uid'
            KeySchema:
              - AttributeName: 'uid'
                KeyType: HASH
            Projection:
              ProjectionType: 'ALL'


    TaskDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        BillingMode: PAY_PER_REQUEST
        TableName: Task_${env:NODE_ENV, 'dev'}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: lid
            AttributeType: S
          - AttributeName: uid
            AttributeType: S
        KeySchema: # 这个是table 主键定义， or 是一个table index 定义
          - AttributeName: id
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: 'index_lid'
            KeySchema:
              - AttributeName: 'lid'
                KeyType: HASH
            Projection:
              ProjectionType: 'ALL'
          - IndexName: 'index_uid'
            KeySchema:
              - AttributeName: 'uid'
                KeyType: HASH
            Projection:
              ProjectionType: 'ALL'
